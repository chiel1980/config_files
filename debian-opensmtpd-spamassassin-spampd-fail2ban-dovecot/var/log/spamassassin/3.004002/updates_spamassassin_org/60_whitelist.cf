# SpamAssassin rules file: default whitelists
#
# Please don't modify this file as your changes will be overwritten with
# the next update. Use /etc/spamassassin/local.cf instead.
# See 'perldoc Mail::SpamAssassin::Conf' for details.
#
# <@LICENSE>
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to you under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at:
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# </@LICENSE>

###########################################################################
# Whitelist rules
#
# Note that most of these get 'noautolearn'.  They should not be
# considered when deciding whether to auto-learn a message, as a
# user slip-up could result in scribbling side-effects in the bayes
# db as a result -- which is hard to remedy.

ifplugin Mail::SpamAssassin::Plugin::WLBLEval

header USER_IN_BLACKLIST	eval:check_from_in_blacklist()
describe USER_IN_BLACKLIST	From: address is in the user's black-list
tflags USER_IN_BLACKLIST	userconf noautolearn

header USER_IN_WHITELIST	eval:check_from_in_whitelist()
describe USER_IN_WHITELIST	From: address is in the user's white-list
tflags USER_IN_WHITELIST	userconf nice noautolearn

header USER_IN_DEF_WHITELIST	eval:check_from_in_default_whitelist()
describe USER_IN_DEF_WHITELIST	From: address is in the default white-list
tflags USER_IN_DEF_WHITELIST	userconf nice noautolearn

header USER_IN_BLACKLIST_TO     eval:check_to_in_blacklist()
describe USER_IN_BLACKLIST_TO   User is listed in 'blacklist_to'
tflags USER_IN_BLACKLIST_TO     userconf noautolearn

header USER_IN_WHITELIST_TO     eval:check_to_in_whitelist()
describe USER_IN_WHITELIST_TO   User is listed in 'whitelist_to'
tflags USER_IN_WHITELIST_TO     userconf nice noautolearn

header USER_IN_MORE_SPAM_TO     eval:check_to_in_more_spam()
describe USER_IN_MORE_SPAM_TO   User is listed in 'more_spam_to'
tflags USER_IN_MORE_SPAM_TO     userconf nice noautolearn

header USER_IN_ALL_SPAM_TO      eval:check_to_in_all_spam()
describe USER_IN_ALL_SPAM_TO    User is listed in 'all_spam_to'
tflags USER_IN_ALL_SPAM_TO      userconf nice noautolearn

if (version >= 3.004000)
body      URI_HOST_IN_BLACKLIST eval:check_uri_host_in_blacklist()
describe  URI_HOST_IN_BLACKLIST Host or Domain is listed in the user's URI black-list
tflags    URI_HOST_IN_BLACKLIST userconf noautolearn

body      URI_HOST_IN_WHITELIST eval:check_uri_host_in_whitelist()
describe  URI_HOST_IN_WHITELIST Host or Domain is listed in the user's URI white-list
tflags    URI_HOST_IN_WHITELIST userconf nice noautolearn

# Bug 7256, using a header rule with an eval() function does not work the way
# this was intended.

# header    HEADER_HOST_IN_BLACKLIST eval:check_uri_host_listed('BLACK')
# describe  HEADER_HOST_IN_BLACKLIST Host or Domain in header is listed in the user's URI black-list
# tflags    HEADER_HOST_IN_BLACKLIST userconf noautolearn

# header    HEADER_HOST_IN_WHITELIST eval:check_uri_host_listed('WHITE')
# describe  HEADER_HOST_IN_WHITELIST Host or Domain in header is listed in the user's URI white-list
# tflags    HEADER_HOST_IN_WHITELIST userconf nice noautolearn
endif

###########################################################################
# Default whitelists.  These should be addresses which send mail that is often
# tagged (incorrectly) as spam; it also helps that they be addresses of big
# companies with lots of lawyers, so if spammers impersonate them, they'll get
# into big trouble, so it doesn't provide a shortcut around SpamAssassin.
#
# Whitelist and blacklist addresses are now file-glob-style patterns, so
# "friend@somewhere.com", "*@isp.com", or "*.domain.net" will all work.
#
# Please do not add unmoderated public mailing lists here.  They are
# too easily abused by spammers.

# Should really not be used these days, use def_whitelist_auth if possible.

# def_whitelist_from_rcvd  *@foo.com  foo.com

endif
